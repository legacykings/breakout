import pygame
import random
pygame.init()


screen = pygame.display.set_mode((1000,800))
pygame.display.set_caption("breakout!")

doExit = False

p1x = 500
p1y = 700
ball_x = 350
ball_y = 250
ball_size = 10
bVx = 5
bVy = 5
p1Score = 69

class brick:
    def __init__(self, xpos, ypos):
        self.xpos = xpos
        self.ypos = ypos
        self.color = (random.randrange(100,250),random.randrange(100,250),random.randrange(100,250))
        self.isDead = False
    def draw(self):
        if not self.isDead:
            pygame.draw.rect(screen, self.color, (self.xpos, self.ypos, 100, 50))
    def collide(self, ball_x, ball_y):
        if not self.isDead:
                if(ball_x + ball_size > self.xpos and
                   ball_x < self.xpos + 100 and
                   ball_y + ball_size > self.ypos and
                   ball_y < self.ypos + 50):
                    self.isDead = True
                    return True
                return False
        
b1 = brick(50, 50)
b2 = brick(200, 50)
b3 = brick(350, 50)
b4 = brick(500, 50)
b5 = brick(650, 50)
b6 = brick(50, 150)
b7 = brick(200, 150)
b8 = brick(350, 150)
b9 = brick(500, 150)
b10 = brick(650, 150)
b11 = brick(800, 50)
b12 = brick(800, 150)

clock = pygame.time.Clock()

while not doExit:
    
    
    clock.tick(60)
    
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            doExit = True
            
            
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT]:
        p1x-=5
    if keys[pygame.K_RIGHT]:
        p1x+=5
              
#     if ball_x > 679:
#         bVx *= -1
#         p1Score += 1
    
        
    ball_x += bVx
    ball_y += bVy
    
    if ball_x < 0 or ball_x + 20 > 1000:
        bVx *= -1
    if ball_y < 0 or ball_y + 20 > 800:
        bVy *= -1
        
    #if ball_x < p1x + 100 and ball_y + 15 > p1y and ball_y < p1y + 20:
    if ball_x + 15 > p1x and ball_x-15 < p1x+100 and ball_y+15 > p1y:
        bVy *= -1
     
    if b1.collide(ball_x, ball_y):
        bVy *= -1
    if b2.collide(ball_x, ball_y):
        bVy *= -1
    if b3.collide(ball_x, ball_y):
        bVy *= -1
    if b4.collide(ball_x, ball_y):
        bVy *= -1
    if b5.collide(ball_x, ball_y):
        bVy *= -1
    if b6.collide(ball_x, ball_y):
        bVy *= -1
    if b7.collide(ball_x, ball_y):
        bVy *= -1
    if b8.collide(ball_x, ball_y):
        bVy *= -1
    if b9.collide(ball_x, ball_y):
        bVy *= -1
    if b10.collide(ball_x, ball_y):
        bVy *= -1
    if b11.collide(ball_x, ball_y):
        bVy *= -1
    if b12.collide(ball_x, ball_y):
        bVy *= -1
    
        
    
    
            
            
            
            
            
    screen.fill((0,0,0))
    
    
    
    pygame.draw.rect(screen, (255, 255, 255), (p1x, p1y, 100, 20))
    pygame.draw.circle(screen, (255, 255, 255), (ball_x, ball_y), 15)
    font = pygame.font.Font(None, 74)
    text = font.render(str(p1Score), 1, (255, 255, 255))
    screen.blit(text, (250,10))
    b1.draw()
    b2.draw()
    b3.draw()
    b4.draw()
    b5.draw()
    b6.draw()
    b7.draw()
    b8.draw()
    b9.draw()
    b10.draw()
    b11.draw()
    b12.draw()

    
    
    pygame.display.flip()
            
            
            
pygame.quit()
